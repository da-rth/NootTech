# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-02-13 02:53
from __future__ import unicode_literals

import backendAPI.utils
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('colour', models.CharField(default='#00CCCC', max_length=7)),
                ('upload_key', models.CharField(default='VYWJS3hbTqytwObHumR1QQ==', max_length=26)),
                ('warnings', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(default=0)),
                ('sample_rate', models.IntegerField(default=0)),
                ('is_web_safe', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Audio',
            },
        ),
        migrations.CreateModel(
            name='BannedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason', models.TextField()),
                ('banned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_by_set', to=settings.AUTH_USER_MODEL)),
                ('banned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_user_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Banned Users',
            },
        ),
        migrations.CreateModel(
            name='ErrorVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=256)),
            ],
            options={
                'verbose_name_plural': 'Error Videos',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('views', models.IntegerField(default=0)),
                ('ip', models.GenericIPAddressField(default='127.0.0.1')),
                ('icon', models.CharField(blank=True, max_length=32)),
                ('is_private', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('generated_filename', models.CharField(default='ac0y2qhs', max_length=16, unique=True)),
                ('original_filename', models.CharField(blank=True, max_length=256)),
                ('file_content', models.FileField(blank=True, null=True, unique=True, upload_to=backendAPI.utils.get_file_path)),
                ('file_ext', models.CharField(blank=True, max_length=24)),
                ('file_mime_type', models.CharField(default='text/plain', max_length=64)),
                ('file_size_bytes', models.BigIntegerField(default=0)),
                ('file_size_str', models.CharField(default='0 Bytes', max_length=12)),
                ('thumbnail', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to=backendAPI.utils.get_thumb_path)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'All Files',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution', models.CharField(blank=True, max_length=64, null=True)),
                ('mode', models.CharField(max_length=32, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('is_web_safe', models.BooleanField(default=False)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendAPI.File')),
            ],
            options={
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='ReportedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reason_title', models.CharField(max_length=128)),
                ('reason_body', models.TextField()),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_by_set', to=settings.AUTH_USER_MODEL)),
                ('reported_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendAPI.File')),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_user_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reported Files',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characters', models.IntegerField(default=0)),
                ('lines', models.IntegerField(default=0)),
                ('syntax_highlighting', models.CharField(blank=True, max_length=32)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendAPI.File')),
            ],
            options={
                'verbose_name_plural': 'Text',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution', models.CharField(blank=True, max_length=64, null=True)),
                ('duration', models.IntegerField(default=0)),
                ('fps', models.IntegerField(default=30)),
                ('is_web_safe', models.BooleanField(default=False)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendAPI.File')),
            ],
            options={
                'verbose_name_plural': 'Videos',
            },
        ),
        migrations.AddField(
            model_name='audio',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendAPI.File'),
        ),
    ]
